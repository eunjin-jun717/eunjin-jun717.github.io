{"meta":{"title":"Eunjin's Blog","subtitle":"","description":"","author":"Eunjin Jun","url":"https://eunjin-jun717.github.io","root":"/"},"pages":[],"posts":[{"title":"R-edu2","slug":"R-edu2","date":"2021-03-23T13:53:23.000Z","updated":"2021-03-24T00:02:42.257Z","comments":true,"path":"2021/03/23/R-edu2/","link":"","permalink":"https://eunjin-jun717.github.io/2021/03/23/R-edu2/","excerpt":"","text":"counties visualization practice파일 불러오기1getwd() get working directory 라는 뜻으로 현재 위치를 알려준다. 1setwd(&#x27;R_NCS_2020/1_day/&#x27;) set as working directory 라는 뜻으로 위치를 새로 설정할 수 있다. ###dplyr 설치 방법 2가지 method1) tidyverse 설치 12install.packages(&quot;tidyverse&quot;)library(tidyverse) method2) dplyr만 설치 12install.packages(&quot;dplyr&quot;)library(dplyr) 데이터 가져오기1counties &lt;- readxl::read_xlsx(&quot;data/counties.xslx&quot;, sheet = 1) data 폴더에 있는 counties.xlsx 파일을 가져온다.만약 경로 error가 뜨면 getwd()를 하여 현재 파일 위치가 잘못되어있는지 확인해본다. 데이터 확인1glimpse(counties) select 사용하여 원하는 변수들 추출12345counties_selected &lt;- counties %&gt;% select(state, region, men, women, population) counties_selected %&gt;% arrange(desc(state)) counties 변수들 중에서 state, region, men, women, population 변수들의 데이터만 고른다.select한 것을 counties_selected라는 변수 이름으로 저장한다. counties_selected 를 state 기준으로 내림차순 정렬한다. filter 사용하여 불필요한 것 제거하고 보기12counties_selected %&gt;% filter(population &lt; 10000) population이 10000명 이하인 것들만 보여준다.조건이 두가지일 경우에는 아래와 같이 한다. 12counties_selected %&gt;% filter(state == &quot;California&quot; | population &gt; 100000) state가 California이거나 population이 100000명 이상인 것을 추출한다. 참조 https://github.com/dschloe/R_edu","categories":[],"tags":[{"name":"r","slug":"r","permalink":"https://eunjin-jun717.github.io/tags/r/"}]},{"title":"R_edu1","slug":"R-edu1","date":"2021-03-23T13:06:56.000Z","updated":"2021-03-24T00:02:42.257Z","comments":true,"path":"2021/03/23/R-edu1/","link":"","permalink":"https://eunjin-jun717.github.io/2021/03/23/R-edu1/","excerpt":"","text":"R 코딩 기초실행방법 Windows: Ctrl + Enter Mac: Command + Enter 변수 저장 시1&lt;- Alt + - key 누르면 된다. 변수 호출 시12print(x) #혹은x 변수 종류변수 type 숫자형 변수 1my_numeric &lt;- 17 문자형 변수 1my_character &lt;- &quot;eunjin&quot; 숫자형 변수 1my_logical &lt;- FALSE 벡터 생성12number_vector &lt;- c(1,2,3)number_vertor &lt;- c(1,&quot;2&quot;,3) 첫번째 라인은 숫자로만 이루어져있기 때문에 변수 type을 알아보면 “numeric” 으로 나온다. 두번째 라인은 숫자, 문자가 섞여져 있다.이때 컴퓨터는 문자형 -&gt; 숫자형 -&gt; 논리형 으로 저장된다.따라서 두번째 라인의 변수 type은 문자형이 나온다. =&gt; “character” 변수 type을 알아볼때는 class()를 사용한다.1class(number_vector) 범주형 변수의 순서 Levels: 낮음 높음123height_vector &lt;- c(&quot;낮음&quot;, &quot;높음&quot;, &quot;낮음&quot;)factor_height_vector &lt;- factor(height_vector)factor_height_vector Levels 순서 바꾸기 =&gt; 높음 낮음12levels(factor_sex_vector) &lt;- c(&quot;남성&quot;, &quot;여성&quot;)factor_sex_vector Levels 이름 변경 =&gt; Levels: 매우높음 매우낮음1234factor_height_vector &lt;- factor(factor_height_vector, levels = c(&quot;매우높음&quot;, &quot;매우낮음&quot;))factor_height_vector 참조 https://github.com/dschloe/R_edu","categories":[],"tags":[{"name":"r","slug":"r","permalink":"https://eunjin-jun717.github.io/tags/r/"}]},{"title":"What is the main and branch in Github","slug":"meaning","date":"2021-03-23T12:40:58.000Z","updated":"2021-03-24T00:02:42.257Z","comments":true,"path":"2021/03/23/meaning/","link":"","permalink":"https://eunjin-jun717.github.io/2021/03/23/meaning/","excerpt":"","text":"Main 과 Branch 그림에서 보이는 main과 branch의 역할이 무엇인지 궁금하여 찾아보았다. Branch란? 여러 개발자들이 동시에 다양한 작업을 할 수 있게 만들어 주는 기능 각자 독립적인 저장소안에서 소스코드를 원하는대로 작업할 수 있다. 분리된 작업들을 나중에 하나의 새로운 버전으로 만들어낼 수 있다. 장점: 여러 작업들을 동시에 진행할 수 있다. 문제가 발생했을 경우 원인이 되는 작업을 찾아내 대책을 세우기 쉽다.Main이란? default branch 참조https://backlog.com/git-tutorial/kr/stepup/stepup1_1.html","categories":[],"tags":[{"name":"github","slug":"github","permalink":"https://eunjin-jun717.github.io/tags/github/"}]},{"title":"visualization","slug":"visualization","date":"2021-03-22T13:09:02.000Z","updated":"2021-03-24T00:02:42.257Z","comments":true,"path":"2021/03/22/visualization/","link":"","permalink":"https://eunjin-jun717.github.io/2021/03/22/visualization/","excerpt":"","text":"간단하게 시각화 하는 과정 step1) 패키지 설치1install.packages(&quot;ggplot2&quot;) step2) 패키지 불러오기1library(ggplot2) step3) 데이터 불러오기1data(&quot;iris&quot;) step4) 데이터 확인하기1str(iris) step5) 가공되지 않은 Raw data 가공하기 step6) 시각화하기12345ggplot(data=iris, mapping = aes(x = Petal.Length, y = Petal.Width, colour = Species)) + geom_point(size=3) *tap 누르면 자동입력기능 있음.*help에서 ggplot sample 확인 가능.","categories":[],"tags":[]},{"title":"How to create a blog with Hexo","slug":"firstday","date":"2021-03-22T12:38:36.000Z","updated":"2021-03-24T00:02:42.257Z","comments":true,"path":"2021/03/22/firstday/","link":"","permalink":"https://eunjin-jun717.github.io/2021/03/22/firstday/","excerpt":"","text":"github에 2개의 Repository 생성 포스트 버전관리: user_name 포스트 배포용 관리: user_name.github.io Blog 초기화$ hexo init myblog Hexo 모듈 설치$ npm install -g hexo-cli myblog로 들어간 뒤 아래와 같이 입력$ cd myblog$ npm install$ npm install hexo-server –save$ npm install hexo-deployer-git –save 참고로, 복사+붙여넣기 하면 오류를 줄일 수 있음 Local server로 테스트$ hexo server Pycharm pycharm을 열어서 myblog 폴더를 연다. config.yml 파일을 열어 title, author을 수정한다.title: Eunjin’s Blogauthor: Eunjin Jun URL도 아래와 같이 수정한다. url: https://user_name.github.io Deployment의 deploy를 아래와 같이 입력한다.deploy:type: gitrepo: https://github.com/user_name/user_name.github.io.gitbranch: main Hexo generate &amp; deploy 활성화시킨 뒤 배포한다.$ hexo generate$ hexo deploy 한꺼번에 명령을 할 수도 있다.$ hexo deploy –generate Themes 설치ex) icarus 설치 icarus 설치$ npm install hexo-theme-icarus config.yml의 Extensions의 theme을 icarus로 변경theme: icarus $ hexo server이때, Error에서 뜨는 설명대로 그대로 복사한 뒤 붙여넣기하여 설치하기$ npm install –save &#x62;&#x75;&#x6c;&#109;&#97;&#45;&#115;&#116;&#121;&#108;&#x75;&#115;&#64;&#x30;&#46;&#56;&#x2e;&#x30; hexo-renderer-inferno@^0.1.3 다시 local server 테스트$ hexo server$ hexo deploy –generate","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://eunjin-jun717.github.io/tags/hexo/"}]},{"title":"My 1st Markdown file","slug":"temp","date":"2021-03-22T02:08:55.198Z","updated":"2021-03-23T00:37:58.782Z","comments":true,"path":"2021/03/22/temp/","link":"","permalink":"https://eunjin-jun717.github.io/2021/03/22/temp/","excerpt":"","text":"12345a&lt;- 3b&lt;-4c&lt;- a+bprint(c) R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com. When you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this: 1summary(cars) 1234567## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 Including PlotsYou can also embed plots, for example: Note that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot.","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"r","slug":"r","permalink":"https://eunjin-jun717.github.io/tags/r/"},{"name":"github","slug":"github","permalink":"https://eunjin-jun717.github.io/tags/github/"},{"name":"hexo","slug":"hexo","permalink":"https://eunjin-jun717.github.io/tags/hexo/"}]}